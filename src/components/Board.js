import React, {Component} from 'react';
import Column from "./Column";
import NewColumn from "./NewColumn";

class Board extends Component {
    constructor(props) {
        super(props);
        this.state = {
            todoLists: [{
                name: '–ü–ª–∞–Ω –Ω–∞ –º–µ—Å—è—Ü',
                items: [
                    '–ü—Ä–æ–π—Ç–∏ –∫—É—Ä—Å –ø–æ React',
                    '–û—Ç–º–µ—Ç–∏—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
                    '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞, —á—Ç–æ–±—ã —É–µ—Ö–∞—Ç—å –∂–∏—Ç—å –≤ –õ–æ–Ω–¥–æ–Ω',
                    '–°–¥–µ–ª–∞—Ç—å –±–µ–∫–µ–Ω–¥ —Å–≤–æ–µ–≥–æ —Å–∞–π—Ç–∞ –Ω–∞ node.js',
                    '–°–æ–±—Ä–∞—Ç—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ',
                    '–ù–∞–ø–∏—Å–∞—Ç—å –ø–µ—Ä–≤—É—é —Å—Ç–∞—Ç—å—é –≤ –±–ª–æ–≥',
                    '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –≤ –º–æ—Ç–æ—à–∫–æ–ª—É. –•–æ—Ç—è –Ω–µ–º–Ω–æ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≤–∞—Ç–æ, –∫–æ–Ω–µ—á–Ω–æ. –î—Ä—É–∑—å—è –∏ —Ä–æ–¥–∏—Ç–µ–ª–∏ –ø—Ä–æ—Ç–∏–≤, –Ω–æ –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç—Å—è. –ù–æ –∫–æ–≥–æ —è –æ–±–º–∞–Ω—ã–≤–∞—é, —É–∂–µ 2 –≥–æ–¥–∞ —Ä–µ—à–∞—é—Å—å –Ω–∞ —ç—Ç–æ—Ç —à–∞–≥ üò¢ –ï—â–µ –∏ –¥—Ä—É–∑—å—è –±—É–¥—É—Ç —Ö—Ä—É—Å—Ç–∏–∫–æ–º –Ω–∞–∑—ã–≤–∞—Ç—å. –í –æ–±—â–µ–º, —Ö–æ—Ç—è –±—ã –ø–æ–¥—É–º–∞—Ç—å –Ω–∞–¥ —ç—Ç–∏–º.',
                    '–ù–µ—Ç, —è —Å–µ—Ä—å–µ–∑–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –∏–¥—É –≤ –º–æ—Ç–æ—à–∫–æ–ª—É. –ó–∞–ø–∏—Å—ã–≤–∞—é—Å—å!',
                    '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∏–ª–µ—Ç—ã –Ω–∞ –∫–æ–Ω—Ü–µ—Ä—Ç',
                    '–û–ø–ª–∞—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω–∞ –≥–æ–¥ –≤–ø–µ—Ä–µ–¥',
                    '–í—ã–±—Ä–∞—Ç—å —Å–µ–±–µ –Ω–æ–≤—É—é —Ä—É–±–∞—à–∫—É',
                    '–ö—É–ø–∏—Ç—å –∫–æ—Ä–º –¥–ª—è —Å–æ–±–∞–∫–∏',
                    '–ö—É–ø–∏—Ç—å –Ω–æ–≤—ã–µ –æ—á–∫–∏ –¥–ª—è –ø–ª–∞–≤–∞–Ω–∏—è',
                    '–ü–æ–¥–∞—Ä–∏—Ç—å –º–∞–º–µ —Ü–≤–µ—Ç—ã'
                ]
            }, {
                name: '–ü–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å',
                items: [
                    '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å –ø–æ React',
                    '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç–∏—Ä –Ω–∞ —Å—É–±–±–æ—Ç—É',
                    '–ù–∞–∫–∏–¥–∞—Ç—å —Ç–µ–º –¥–ª—è —Å—Ç–∞—Ç–µ–π –≤ –±–ª–æ–≥'
                ]
            }]
        }
        this.pushNewCard = this.pushNewCard.bind(this)
        this.pushNewColumn = this.pushNewColumn.bind(this)
    }

    pushNewCard(index, cardText) {
        let newTodoLists = this.state.todoLists
        newTodoLists[index].items.unshift(cardText)
        this.setState({
            todoLists: newTodoLists
        })
    }

    pushNewColumn(name) {
        let newTodoLists = this.state.todoLists
        newTodoLists.push({
            name: name,
            items: []
        })
        this.setState({
            todoLists: newTodoLists
        })
    }

    render() {
        return (
            <div className="container">
                {this.state.todoLists.map((todoList, index) => <Column key={index}
                                                                       index={index}
                                                                       column={todoList}
                                                                       onCardAdded={this.pushNewCard}
                />)}
                <NewColumn onColumnAdded={this.pushNewColumn}/>
            </div>
        );
    }
}

export default Board;